DESCRIPTION = "Python Bindings for Cairo"
HOMEPAGE = "http://www.cairographics.org/"
SECTION = "Development/Libraries/Python"
LICENSE = "LGPL-2.1+ or MPL-1.1"

SRC_URI = ""

S = "${WORKDIR}/git"

PROVIDES = ""

#PROVIDES by python-cairo-devel 
PROVIDES += "python-cairo-devel"
RPROVIDES_python-cairo-devel += "python-cairo-devel"
RPROVIDES_python-cairo-devel += "python-cairo-dev"

#PROVIDES by python-cairo 
PROVIDES += "python-cairo"
RPROVIDES_python-cairo += "python-cairo"

RDEPENDS = ""
#RDEPENDS of python-cairo-devel (${PN}-devel)
RDEPENDS_${PN}-devel += "cairo-dev"
RDEPENDS_${PN}-devel += "python-dev"
RDEPENDS_${PN}-devel += "python-cairo"


DEPENDS = ""
#DEPENDS of python-cairo 
inherit pythonnative
DEPENDS += "cairo"
DEPENDS += "fdupes-native"

do_patch() {
 chmod -Rf a+rX,u+w,g-w,o-w ${S}
 #setup -n py2cairo-1.10.0
 cp ${S}/packaging/python-cairo.manifest .
 
 
}

do_configure() {
}

do_compile() {
 LANG=C
 export LANG
 unset DISPLAY
 CFLAGS="-O2 -g -m64 -fmessage-length=0 -D_FORTIFY_SOURCE=2 -fstack-protector -funwind-tables -fasynchronous-unwind-tables" ; export CFLAGS ; 
 CXXFLAGS="${CXXFLAGS:--O2 -g -m64 -fmessage-length=0 -D_FORTIFY_SOURCE=2 -fstack-protector -funwind-tables -fasynchronous-unwind-tables}" ; export CXXFLAGS ; 
 FFLAGS="${FFLAGS:--O2 -g -m64 -fmessage-length=0 -D_FORTIFY_SOURCE=2 -fstack-protector -funwind-tables -fasynchronous-unwind-tables -I%_fmoddir}" ; export FFLAGS ; 
 LD_AS_NEEDED=1; export LD_AS_NEEDED ; 
 
 export CFLAGS='-O2 -g -m64 -fmessage-length=0 -D_FORTIFY_SOURCE=2 -fstack-protector -funwind-tables -fasynchronous-unwind-tables'
 ./waf configure --prefix=/usr --libdir=/usr/lib
 ./waf build
 
 
 
}

do_install() {
 echo export RPM_BUILD_ROOT=${D}
 LANG=C
 export LANG
 unset DISPLAY
 rm -rf ${D} 
 mkdir -p ${D} 
 
 ./waf install --destdir=${D}
 # waf is broken and generated byte-code that references the build root, see http://code.google.com/p/waf/issues/detail?id=986
 
 find ${D}//usr/lib/python2.7/site-packages -name '*.pyc' -exec rm -f {} \; 
 python -c "import sys, os, compileall; br='${D}'; compileall.compile_dir(sys.argv[1], ddir=br and (sys.argv[1][len(os.path.abspath(br)):]+'/') or None)" ${D}//usr/lib/python2.7/site-packages 
 
 find ${D}//usr/lib/python2.7/site-packages -name '*.pyc' -exec rm -f {} \; 
 python -c "import sys, os, compileall; br='${D}'; compileall.compile_dir(sys.argv[1], ddir=br and (sys.argv[1][len(os.path.abspath(br)):]+'/') or None)" ${D}//usr/lib/python2.7/site-packages 
  
 find ${D}//usr/lib/python2.7/site-packages -name '*.pyo' -exec rm -f {} \; 
 python -O -c "import sys, os, compileall; br='${D}'; compileall.compile_dir(sys.argv[1], ddir=br and (sys.argv[1][len(os.path.abspath(br)):]+'/') or None)" ${D}//usr/lib/python2.7/site-packages 
 
  _target=""; 
  _symlinks=0; 
   
  fdupes -q -n -r ${D}//usr/lib/python2.7/site-packages | 
   while read _file; do 
     if test -z "$_target" ; then 
       _target="$_file"; 
     else 
       if test -z "$_file" ; then 
 	_target=""; 
 	continue ; 
       fi ; 
       if test "$_symlinks" = 1; then 
         ln -sf "${_target#${D}}" "$_file"; 
       else 
         ln -f "$_target" "$_file"; 
       fi ;
     fi ; 
  done 
 
 
}

PACKAGES = ""
PACKAGES += "python-cairo-devel"
PACKAGES += "python-cairo"

python-cairo-devel_files = ""
python-cairo-devel_files += "python-cairo.manifest"
python-cairo-devel_files += "/usr/include/pycairo/"
python-cairo-devel_files += "/usr/lib/pkgconfig/pycairo.pc"

python-cairo_files = ""
python-cairo_files += "python-cairo.manifest"
python-cairo_files += "COPYING COPYING-*"
python-cairo_files += "/usr/lib/python2.7/site-packages/cairo/"

FILES_${PN}-devel = "${python-cairo-devel_files}"
FILES_${PN} = "${python-cairo_files}"

PKG_python-cairo-devel= "python-cairo-devel"
PKG_python-cairo= "python-cairo"

require python-cairo-extraconf.inc
