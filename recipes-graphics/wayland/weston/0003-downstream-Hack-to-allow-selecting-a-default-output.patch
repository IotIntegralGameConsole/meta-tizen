From: Philippe Coval <philippe.coval@open.eurogiciel.org>
Date: Tue, 10 Jun 2014 15:29:57 +0200
Subject: downstream: Hack to allow selecting a default output

This code originally by Rafael Antognolli <rafael.antognolli@intel.com>
was commited by Stephane Desneux <stephane.desneux@open.eurogiciel.org>
as packaging patch

Change-Id: I48a8cb074f48debe027ca9cf42878ec0a3726044
Signed-off-by: Philippe Coval <philippe.coval@open.eurogiciel.org>
---
 desktop-shell/shell.c |  2 ++
 src/compositor-drm.c  |  5 +++++
 src/compositor-x11.c  | 15 ++++++++++++---
 src/compositor.h      |  3 +++
 4 files changed, 22 insertions(+), 3 deletions(-)

diff --git a/desktop-shell/shell.c b/desktop-shell/shell.c
index 84f5c83..4eef849 100644
--- a/desktop-shell/shell.c
+++ b/desktop-shell/shell.c
@@ -488,6 +488,8 @@ shell_configuration(struct desktop_shell *shell)
 struct weston_output *
 get_default_output(struct weston_compositor *compositor)
 {
+    if (compositor->default_output)
+        return compositor->default_output;
 	return container_of(compositor->output_list.next,
 			    struct weston_output, link);
 }
diff --git a/src/compositor-drm.c b/src/compositor-drm.c
index 7d514e4..9c29dd5 100644
--- a/src/compositor-drm.c
+++ b/src/compositor-drm.c
@@ -1906,6 +1906,7 @@ create_output_for_connector(struct drm_compositor *ec,
 	const char *type_name;
 	enum output_config config;
 	uint32_t transform;
+	int default_output;
 
 	i = find_crtc_for_connector(ec, resources, connector);
 	if (i < 0) {
@@ -1954,6 +1955,8 @@ create_output_for_connector(struct drm_compositor *ec,
 	weston_config_section_get_string(section, "transform", &s, "normal");
 	transform = parse_transform(s, output->base.name);
 	free(s);
+	weston_config_section_get_int(section, "default_output",
+                    &default_output, 0);
 
 	if (get_gbm_format_from_section(section,
 					ec->format,
@@ -2076,6 +2079,8 @@ create_output_for_connector(struct drm_compositor *ec,
 	}
 
 	wl_list_insert(ec->base.output_list.prev, &output->base.link);
+    if (default_output)
+        ec->base.default_output = &output->base;
 
 	find_and_parse_output_edid(ec, output, connector);
 	if (connector->connector_type == DRM_MODE_CONNECTOR_LVDS)
diff --git a/src/compositor-x11.c b/src/compositor-x11.c
index 56b3228..bf32e1a 100644
--- a/src/compositor-x11.c
+++ b/src/compositor-x11.c
@@ -752,7 +752,8 @@ static struct x11_output *
 x11_compositor_create_output(struct x11_compositor *c, int x, int y,
 			     int width, int height, int fullscreen,
 			     int no_input, char *configured_name,
-			     uint32_t transform, int32_t scale)
+			     uint32_t transform, int32_t scale,
+                 int default_output)
 {
 	static const char name[] = "Weston Compositor";
 	static const char class[] = "weston-1\0Weston Compositor";
@@ -906,6 +907,8 @@ x11_compositor_create_output(struct x11_compositor *c, int x, int y,
 		wl_event_loop_add_timer(loop, finish_frame_handler, output);
 
 	wl_list_insert(c->base.output_list.prev, &output->base.link);
+    if (default_output)
+        c->base.default_output = &output->base;
 
 	weston_log("x11 output %dx%d, window id %d\n",
 		   width, height, output->window);
@@ -1489,6 +1492,7 @@ x11_compositor_create(struct wl_display *display,
 	const char *section_name;
 	char *name, *t, *mode;
 	uint32_t transform;
+    int default_output;
 
 	weston_log("initializing x11 backend\n");
 
@@ -1578,11 +1582,14 @@ x11_compositor_create(struct wl_display *display,
 						 "transform", &t, "normal");
 		transform = parse_transform(t, name);
 		free(t);
+        weston_config_section_get_int(section, "default_output",
+                    &default_output, 0);
 
 		output = x11_compositor_create_output(c, x, 0,
 						      width, height,
 						      fullscreen, no_input,
-						      name, transform, scale);
+						      name, transform, scale,
+                              default_output);
 		free(name);
 		if (output == NULL)
 			goto err_x11_input;
@@ -1597,7 +1604,9 @@ x11_compositor_create(struct wl_display *display,
 	for (i = output_count; i < count; i++) {
 		output = x11_compositor_create_output(c, x, 0, width, height,
 						      fullscreen, no_input, NULL,
-						      WL_OUTPUT_TRANSFORM_NORMAL, scale);
+						      WL_OUTPUT_TRANSFORM_NORMAL, scale,
+						      default_output);
+
 		if (output == NULL)
 			goto err_x11_input;
 		x = pixman_region32_extents(&output->base.region)->x2;
diff --git a/src/compositor.h b/src/compositor.h
index 057f8be..4fb8adc 100644
--- a/src/compositor.h
+++ b/src/compositor.h
@@ -199,6 +199,7 @@ struct weston_output {
 	int move_x, move_y;
 	uint32_t frame_time;
 	int disable_planes;
+    uint32_t default_output;
 	int destroying;
 
 	char *make, *model, *serial_number;
@@ -614,6 +615,8 @@ struct weston_compositor {
 	struct wl_list axis_binding_list;
 	struct wl_list debug_binding_list;
 
+    struct weston_output *default_output;
+
 	uint32_t state;
 	struct wl_event_source *idle_source;
 	uint32_t idle_inhibit;
