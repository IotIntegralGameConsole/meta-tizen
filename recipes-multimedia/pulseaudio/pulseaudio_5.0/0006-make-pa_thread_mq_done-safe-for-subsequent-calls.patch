From: Janos Kovacs <jankovac503@gmail.com>
Date: Thu, 16 Aug 2012 03:47:48 +0300
Subject: make pa_thread_mq_done() safe for subsequent calls

Change-Id: I71ab9efa72c38a2200a56b7a4d30116767bc104f
Signed-off-by: Jaska Uimonen <jaska.uimonen@intel.com>
---
 src/pulsecore/thread-mq.c | 8 ++++++++
 1 file changed, 8 insertions(+)

diff --git a/src/pulsecore/thread-mq.c b/src/pulsecore/thread-mq.c
index d34b22b..f3c5b6c 100644
--- a/src/pulsecore/thread-mq.c
+++ b/src/pulsecore/thread-mq.c
@@ -144,6 +144,14 @@ void pa_thread_mq_init(pa_thread_mq *q, pa_mainloop_api *mainloop, pa_rtpoll *rt
 void pa_thread_mq_done(pa_thread_mq *q) {
     pa_assert(q);
 
+    if (!q->main_mainloop && !q->inq && !q->outq &&
+        !q->read_main_event && !q->write_main_event)
+        return;
+
+    pa_assert(q->main_mainloop);
+    pa_assert(q->inq && q->outq);
+    pa_assert(q->read_main_event && q->write_main_event);
+
     /* Since we are called from main context we can be sure that the
      * inq is empty. However, the outq might still contain messages
      * for the main loop, which we need to dispatch (e.g. release
